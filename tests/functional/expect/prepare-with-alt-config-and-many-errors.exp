#!/usr/bin/env -S expect -f
#
# This Expect script was generated by autoexpect on Sat Mar  1 10:53:48 2025
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don

variable scriptPath [file normalize [info script]]
variable scriptDir [file dirname $scriptPath]

set timeout -1
spawn $scriptDir/../../../bin/conventional-commits --no-ansi prepare --config $scriptDir/../../configs/config-03.json
match_max 100000
expect -exact "\r
Prepare Commit Message\r
======================\r
\r
 The following prompts will help you create a commit message that\r
 follows the Conventional Commits specification.\r
\r
 What is the type of change you're committing? (e.g., feat, fix, etc.) \[feat\]:\r
 > "
send -- "qux\r"
expect -exact "\r
\r
 \[ERROR\] Invalid type. 'qux' is not one of the valid types 'feat, fix, foo, bar'.                                       \r
\r
 What is the type of change you're committing? (e.g., feat, fix, etc.) \[feat\]:\r
 > "
send -- "foo\r"
expect -exact "\r
\r
 What is the scope of this change (e.g., component or file name)?:\r
 > "
send -- "quux\r"
expect -exact "\r
\r
 \[ERROR\] Invalid scope. 'quux' is not one of the valid scopes 'baz, qux'.                                               \r
\r
 What is the scope of this change (e.g., component or file name)?:\r
 > "
send -- "BAZ\r"
expect -exact "\r
\r
 \[ERROR\] Invalid scope. 'BAZ' is not formatted in snake case.                                                           \r
\r
 What is the scope of this change (e.g., component or file name)?:\r
 > "
send -- "baz\r"
expect -exact "\r
\r
 Write a short description of the change:\r
 > "
send -- "a short description\r"
expect -exact "a short description\r
\r
\r
 \[ERROR\] Invalid description. 'a short description' is not formatted in sentence case.                                  \r
\r
 Write a short description of the change:\r
 > "
send -- "A short description\r"
expect -exact "A short description\r
\r
\r
 \[ERROR\] Invalid description. 'A short description' does not end with the expected end mark '.'.                        \r
\r
 Write a short description of the change:\r
 > "
send -- "A short description.\r"
expect -exact "A short description.\r
\r
 You must provide a longer description of the change (press Ctrl+D to continue):\r
 > "
send -- "\r"
expect -exact "\r
\r
\r
 \[ERROR\] Invalid body. You must provide a body.                                                                         \r
\r
 You must provide a longer description of the change (press Ctrl+D to continue):\r
 > "
send -- "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed eget ullamcorper velit. Mauris ornare vulputate leo. Ut tempus molestie egestas. Donec metus ligula, gravida sit amet eros nec, sollicitudin tristique eros. Nunc vestibulum lacinia mi, quis cursus orci tempor in."
expect -exact "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed eget ullamcorper velit. Mauris ornare vulputate leo. Ut tempus molestie egestas. Donec metus ligula, gravida sit amet eros nec, sollicitudin tristique eros. Nunc vestibulum lacinia mi, quis cursus orci tempor in."
send -- "\r"
expect -exact "\r
"
send -- "\r"
expect -exact "\r
"
send -- "Aliquam felis ex, pretium at elit dapibus, vehicula congue justo. Maecenas nulla dui, dignissim ac blandit sed, vulputate in tortor. Fusce sed libero eros. Aliquam velit metus, pellentesque non enim sit amet, fermentum blandit tellus. Donec nibh augue, feugiat at cursus a, convallis id massa. Sed egestas leo a vulputate rhoncus."
expect -exact "Aliquam felis ex, pretium at elit dapibus, vehicula congue justo. Maecenas nulla dui, dignissim ac blandit sed, vulputate in tortor. Fusce sed libero eros. Aliquam velit metus, pellentesque non enim sit amet, fermentum blandit tellus. Donec nibh augue, feugiat at cursus a, convallis id massa. Sed egestas leo a vulputate rhoncus."
send -- "\r"
expect -exact "\r
"
send -- ""
expect -exact "^D\r
 Are there any breaking changes? (yes/no) \[no\]:\r
 > "
send -- "no\r"
expect -exact "no\r
\r
 Does this change affect any open issues? (yes/no) \[no\]:\r
 > "
send -- "no\r"
expect -exact "no\r
\r
 To add a footer, provide a footer name, or press ENTER to skip (e.g., Signed-off-by):\r
 > "
send -- "\r"
expect -exact "\r
\r
 \[ERROR\] Please provide the following required footers: see-also, signed-off-by.                                        \r
\r
 To add a footer, provide a footer name, or press ENTER to skip (e.g., Signed-off-by):\r
 > "
send -- "Signed-off-by\r"
expect -exact "\r
\r
 Provide a value for the footer Signed-off-by:\r
 > "
send -- "Jane Doe <jane@example.com>\r"
expect -exact "Jane Doe <jane@example.com>\r
\r
 To add a footer, provide a footer name, or press ENTER to skip (e.g., Signed-off-by):\r
 > "
send -- "foo bar baz\r"
expect -exact "\r
\r
 \[ERROR\] Invalid footer name. Token 'foo bar baz' is invalid.                                                           \r
\r
 To add a footer, provide a footer name, or press ENTER to skip (e.g., Signed-off-by):\r
 > "
send -- "See-also\r"
expect -exact "\r
\r
 Provide a value for the footer See-also:\r
 > "
send -- "Foo: Bar\r"
expect -exact "Foo: Bar\r
\r
\r
 \[ERROR\] Invalid footer value. Footer values may not contain other footers.                                             \r
\r
 Provide a value for the footer See-also:\r
 > "
send -- "https://example.com/foo\r"
expect -exact "https://example.com/foo\r
\r
 To add a footer, provide a footer name, or press ENTER to skip (e.g., Signed-off-by):\r
 > "
send -- "\r"
expect eof
